{
  "filename": "dev_run.md",
  "__html": "<h4>搭建 dev 分支开发环境</h4>\n<ol>\n<li>\n<p><strong>下载源码</strong></p>\n<p>GitHub ：<a href=\"https://github.com/apache/dolphinscheduler\">https://github.com/apache/dolphinscheduler</a></p>\n<pre><code class=\"language-shell\">mkdir dolphinscheduler\ncd dolphinscheduler\ngit clone git@github.com:apache/dolphinscheduler.git\n</code></pre>\n<p>这里选用 dev 分支。</p>\n</li>\n<li>\n<p>** 安装 ZooKeeper**</p>\n<ol>\n<li>\n<p>下载 ZooKeeper <a href=\"https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gz\">https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gz</a></p>\n</li>\n<li>\n<p>解压 apache-zookeeper-3.6.3-bin.tar.gz</p>\n</li>\n<li>\n<p>在 ZooKeeper 的目录下新建 zkData、zkLog文件夹</p>\n</li>\n<li>\n<p>将 conf 目录下的 zoo_sample.cfg 文件，复制一份，重命名为 zoo.cfg，修改其中数据和日志的配置，如：</p>\n<pre><code class=\"language-shell\">dataDir=/data/zookeeper/data ## 此处使用绝对路径\ndataLogDir=/data/zookeeper/datalog\n</code></pre>\n</li>\n<li>\n<p>在 bin 中运行 <a href=\"http://zkServer.sh\">zkServer.sh</a>，然后运行 <a href=\"http://zkCli.sh\">zkCli.sh</a> 查看 ZooKeeper 运行状态，可以查看 ZooKeeper 节点信息即代表安装成功。</p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>搭建后端环境</strong></p>\n<ol>\n<li>\n<p>在本地新建一个数据库用于调试，DolphinScheduler 支持 MySQL 和 PostgreSQL，这里使用 MySQL 进行配置，库名可为 ：dolphinscheduler；</p>\n</li>\n<li>\n<p>把代码导入 IDEA，修改根项目中 pom.xml，将 mysql-connector-java 依赖的 scope 修改为 compile；</p>\n</li>\n<li>\n<p>在 terminal 中执行 <code>mvn -U clean install package -Prelease -Dmaven.test.skip=true</code>，安装所需要的注册插件；</p>\n</li>\n<li>\n<p>修改 dolphinscheduler-dao 模块的 datasource.properties；</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\"># mysql</span>\n<span class=\"hljs-meta\">spring.datasource.driver-class-name</span>=<span class=\"hljs-string\">com.mysql.jdbc.Driver</span>\n<span class=\"hljs-meta\">spring.datasource.url</span>=<span class=\"hljs-string\">jdbc:mysql://xxx:3306/dolphinscheduler?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true     # 替换您的数据库 ip 地址</span>\n<span class=\"hljs-meta\">spring.datasource.username</span>=<span class=\"hljs-string\">xxx\t\t\t\t\t\t# 替换您的数据库用户名</span>\n<span class=\"hljs-meta\">spring.datasource.password</span>=<span class=\"hljs-string\">xxx\t\t\t\t\t\t# 替换您的数据库密码</span>\n</code></pre>\n</li>\n<li>\n<p>刷入项目所需的表和数据；dev 分支数据库字段变化比较频繁，在数据库里直接运行项目根目录下 <code>dolphinscheduler\\sql</code> 文件夹下对应数据库的 sql 文件 ，MySQL 下直接运行 <code>dolphinscheduler_mysql.sql</code></p>\n</li>\n<li>\n<p>分别修改 dolphinscheduler-service 模块的 registry.properties 和 dolphinscheduler-server 模块的 worker.properties，注意：这里的 <code>1.3.6-SNAPSHOT</code> 需要根据实际生成的文件进行填写</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\">#registry.plugin.dir config the Registry Plugin dir.</span>\n<span class=\"hljs-meta\">registry.plugin.dir</span>=<span class=\"hljs-string\">./dolphinscheduler-dist/target/dolphinscheduler-dist-1.3.6-SNAPSHOT/lib/plugin/registry/zookeeper</span>\n\n<span class=\"hljs-meta\">registry.plugin.name</span>=<span class=\"hljs-string\">zookeeper</span>\n<span class=\"hljs-meta\">registry.servers</span>=<span class=\"hljs-string\">127.0.0.1:2181</span>\n</code></pre>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\">#task.plugin.dir config the #task.plugin.dir config the Task Plugin dir . WorkerServer while find and load the Task Plugin Jar from this dir when deploy and start WorkerServer on the server .</span>\n<span class=\"hljs-meta\">task.plugin.dir</span>=<span class=\"hljs-string\">./dolphinscheduler-task-plugin/dolphinscheduler-task-shell/target/dolphinscheduler-task-shell-1.3.6-SNAPSHOT</span>\n</code></pre>\n</li>\n<li>\n<p>在 logback-worker.xml、logback-master.xml、logback-api.xml 中添加控制台输出；</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">root</span> <span class=\"hljs-attr\">level</span>=<span class=\"hljs-string\">&quot;INFO&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">appender-ref</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;STDOUT&quot;</span>/&gt;</span>  <span class=\"hljs-comment\">&lt;!-- 添加控制台输出 --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">appender-ref</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;APILOGFILE&quot;</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">appender-ref</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;SKYWALKING-LOG&quot;</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">root</span>&gt;</span>\n</code></pre>\n</li>\n<li>\n<p>启动 MasterServer，执行 org.apache.dolphinscheduler.server.master.MasterServer 的 main 方法，需要设置 VM Options:</p>\n<pre><code>-Dlogging.config=classpath:logback-master.xml -Ddruid.mysql.usePingMethod=false\n</code></pre>\n</li>\n<li>\n<p>启动 WorkerServer，执行org.apache.dolphinscheduler.server.worker.WorkerServer的 main方法，需要设置 VM Options:</p>\n<pre><code>-Dlogging.config=classpath:logback-worker.xml -Ddruid.mysql.usePingMethod=false\n</code></pre>\n</li>\n<li>\n<p>启动 ApiApplicationServer，执行 org.apache.dolphinscheduler.api.ApiApplicationServer 的 main 方法，需要设置 VM Options:</p>\n<pre><code>-Dlogging.config=classpath:logback-api.xml -Dspring.profiles.active=api\n</code></pre>\n</li>\n<li>\n<p>如果需要用到日志功能，执行 org.apache.dolphinscheduler.server.log.LoggerServer 的 main 方法。</p>\n</li>\n<li>\n<p>后端 Open API 文档地址 ：<a href=\"http://localhost:12345/dolphinscheduler/doc.html?language=zh_CN&amp;lang=cn\">http://localhost:12345/dolphinscheduler/doc.html?language=zh_CN&amp;lang=cn</a></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>搭建前端环境</strong></p>\n<ol>\n<li>\n<h4>安装 node</h4>\n<ol>\n<li>安装 nvm\ncurl -o- <a href=\"https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh\">https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh</a> | bash</li>\n<li>刷新环境变量\nsource ~/.bash_profile</li>\n<li>安装 node\nnvm install v12.20.2 备注: Mac 用户还可以通过 brew 安装 npm: brew install npm</li>\n<li>验证 node 安装成功\nnode --version</li>\n</ol>\n</li>\n<li>\n<p>进入 dolphinscheduler-ui，运行</p>\n<pre><code class=\"language-shell\">npm install\nnpm run start\n</code></pre>\n</li>\n<li>\n<p>访问 <a href=\"http://localhost:8888/\">http://localhost:8888</a></p>\n</li>\n<li>\n<p>登录管理员账号</p>\n<blockquote>\n<p>用户：admin</p>\n<p>密码：dolphinscheduler123</p>\n</blockquote>\n</li>\n</ol>\n</li>\n</ol>\n",
  "link": "/dist/zh-cn/docs/dev/user_doc/dev_run.html",
  "meta": {}
}